name: Deploy and Release

on:
  push:
    branches: ["main"]
    paths:
      - 'public/**'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Upload public/ to GitHub Pages
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  autorelease:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Semver Tag/Release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const sha = context.sha;

            const commit = await github.rest.repos.getCommit({
              owner,
              repo,
              ref: sha
            });
            const message = commit.data.commit.message;

            let latestTag = 'v0.0.0';
            try {
              const tags = await github.rest.repos.listTags({ owner, repo, per_page: 1 });
              if (tags.data.length > 0) latestTag = tags.data[0].name;
            } catch {}

            let [major, minor, patch] = latestTag.replace(/^v/, '').split('.').map(Number);

            if (message.startsWith('BREAKING CHANGE')) {
              major += 1; minor = 0; patch = 0;
              core.info('Incrementing major version');
            } else if (message.startsWith('feat')) {
              minor += 1; patch = 0;
              core.info('Incrementing minor version');
            } else if (message.startsWith('chore') || message.startsWith('fix')) {
              patch += 1;
              core.info('Incrementing patch version');
            } else {
              minor += 1; patch = 0;
              core.info('Defaulting to minor version increment');
            }

            const newTag = `v${major}.${minor}.${patch}`;

            await github.rest.git.createRef({
              owner,
              repo,
              ref: `refs/tags/${newTag}`,
              sha: sha
            });

            await github.rest.repos.createRelease({
              owner,
              repo,
              tag_name: newTag,
              name: newTag,
              body: message,
              draft: false,
              prerelease: false
            });

            core.info(`Created release ${newTag}`);
